description: |
  Allows the stock kubectl client to work with Azure AKS.
  Updates the kubectl configuration file
  with AKS cluster connection details.

parameters:
  cluster-name:
    description: |
      The name of the cluster for which to create a kubeconfig entry.
    type: string
  resource-group:
    description: |
      Resource group that the AKS cluster will be created in.
    type: string
  subscription:
    description: |
      Name or ID of subscription.
    type: string
    default: ""
  get-admin-credentials:
    description: |
      Get cluster administrator credentials instead of cluster user credentials.
    type: boolean
    default: false
  file:
    description: |
      Kubernetes configuration file to update. Use "-" to print YAML to stdout instead.
    type: string
    default: ""
  overwrite-existing:
    description: |
      Whether to overwrite any existing cluster entry with the same name.
    type: boolean
    default: false
  perform-login:
    description: |
      Whether to perform a login with the Azure CLI.
      (See https://circleci.com/orbs/registry/orb/circleci/azure-cli#commands-login-with-user-or-service-principal
      for the required environment variables)
    type: boolean
    default: false
  install-kubectl:
    description: |
      Whether to install kubectl
    type: boolean
    default: false

steps:
  - azure-cli/install
  - when:
      condition: << parameters.perform-login >>
      steps:
        - azure-cli/login-with-user-or-service-principal
  - when:
      condition: << parameters.install-kubectl >>
      steps:
        - kubernetes/install
  - run:
      name: Update the kubectl configuration file so that the cluster can be connected to
      command: |
        CLUSTER_NAME="<< parameters.cluster-name >>"
        RESOURCE_GROUP="<< parameters.resource-group >>"
        SUBSCRIPTION="<< parameters.subscription >>"
        GET_ADMIN_CREDENTIALS="<< parameters.get-admin-credentials >>"
        FILE="<< parameters.file >>"
        OVERWRITE_EXISTING="<< parameters.overwrite-existing >>"
        if [ -n "${CLUSTER_NAME}" ]; then
          set -- "$@" --name "${CLUSTER_NAME}"
        fi
        if [ -n "${RESOURCE_GROUP}" ]; then
          set -- "$@" --resource-group "${RESOURCE_GROUP}"
        fi
        if [ -n "${SUBSCRIPTION}" ]; then
          set -- "$@" --subscription "${SUBSCRIPTION}"
        fi
        if [ "${GET_ADMIN_CREDENTIALS}" == "true" ]; then
          set -- "$@" --admin
        fi
        if [ -n "${FILE}" ]; then
          set -- "$@" --file "${FILE}"
        fi
        if [ "${OVERWRITE_EXISTING}" == "true" ]; then
          set -- "$@" --overwrite-existing
        fi
        az aks get-credentials "$@"
